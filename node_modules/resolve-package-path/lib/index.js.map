{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport path from 'path';\nimport customResolvePackagePath from './resolve-package-path';\nimport rethrowUnlessCode from './rethrow-unless-code';\nconst ALLOWED_ERROR_CODES = [\n  // resolve package error codes\n  'MODULE_NOT_FOUND',\n\n  // Yarn PnP Error Codes\n  'UNDECLARED_DEPENDENCY',\n  'MISSING_PEER_DEPENDENCY',\n  'MISSING_DEPENDENCY'\n];\n\nimport CacheGroup = require('./cache-group');\nimport Cache = require('./cache');\nconst getRealFilePath = customResolvePackagePath._getRealFilePath;\nconst getRealDirectoryPath = customResolvePackagePath._getRealDirectoryPath;\nconst __findUpPackagePath = customResolvePackagePath._findUpPackagePath;\n\nlet CACHE = new CacheGroup();\nlet FIND_UP_CACHE = new Cache();\nlet pnp: any;\n\ntry {\n  // eslint-disable-next-line node/no-missing-require\n  pnp = require('pnpapi');\n} catch (error) {\n  // not in Yarn PnP; not a problem\n}\n\n/**\n * Search each directory in the absolute path `baseDir`, from leaf to root, for\n * a `package.json`, and return the first match, or `null` if no `package.json`\n * was found.\n *\n * @public\n * @param {string} baseDir - an absolute path in which to search for a `package.json`\n * @param {CacheGroup|boolean} [_cache] (optional)\n *  * if true: will choose the default global cache\n *  * if false: will not cache\n *  * if undefined or omitted, will choose the default global cache\n *  * otherwise we assume the argument is an external cache of the form provided by resolve-package-path/lib/cache-group.js\n *\n * @return {string|null} a full path to the resolved package.json if found or null if not\n */\nfunction _findUpPackagePath(baseDir: string, _cache?: Cache | boolean) {\n  let cache;\n  if (_cache === undefined || _cache === null || _cache === true) {\n    // if no cache specified, or if cache is true then use the global cache\n    cache = FIND_UP_CACHE;\n  } else if (_cache === false) {\n    // if cache is explicity false, create a throw-away cache;\n    cache = new Cache();\n  } else {\n    // otherwise, assume the user has provided an alternative cache for the following form:\n    // provided by resolve-package-path/lib/cache-group.js\n    cache = _cache;\n  }\n\n  let absoluteStart = path.resolve(baseDir);\n\n  return __findUpPackagePath(cache, absoluteStart);\n}\n\n/*\n * @public\n *\n * @method resolvePackagePathSync\n * @param {string} name name of the dependency module.\n * @param {string} baseDir root dir to run the resolve from\n * @param {Boolean|CustomCache} (optional)\n *  * if true: will choose the default global cache\n *  * if false: will not cache\n *  * if undefined or omitted, will choose the default global cache\n *  * otherwise we assume the argument is an external cache of the form provided by resolve-package-path/lib/cache-group.js\n *\n * @return {string|null} a full path to the resolved package.json if found or null if not\n */\nexport = resolvePackagePath;\nfunction resolvePackagePath(\n  target: string,\n  baseDir: string,\n  _cache?: CacheGroup | boolean,\n): string | null {\n  let cache;\n\n  if (_cache === undefined || _cache === null || _cache === true) {\n    // if no cache specified, or if cache is true then use the global cache\n    cache = CACHE;\n  } else if (_cache === false) {\n    // if cache is explicity false, create a throw-away cache;\n    cache = new CacheGroup();\n  } else {\n    // otherwise, assume the user has provided an alternative cache for the following form:\n    // provided by resolve-package-path/lib/cache-group.js\n    cache = _cache;\n  }\n\n  if (baseDir.charAt(baseDir.length - 1) !== path.sep) {\n    baseDir = `${baseDir}${path.sep}`;\n  }\n\n  const key = target + '\\x00' + baseDir;\n\n  let pkgPath;\n\n  if (cache.PATH.has(key)) {\n    pkgPath = cache.PATH.get(key);\n  } else {\n    try {\n      // the custom `pnp` code here can be removed when yarn 1.13 is the\n      // current release. This is due to Yarn 1.13 and resolve interoperating\n      // together seamlessly.\n      pkgPath = pnp\n        ? pnp.resolveToUnqualified(target + '/package.json', baseDir)\n        : customResolvePackagePath(cache, target, baseDir);\n    } catch (e) {\n      rethrowUnlessCode(e,  ...ALLOWED_ERROR_CODES);\n      pkgPath = null;\n    }\n\n    cache.PATH.set(key, pkgPath);\n  }\n  return pkgPath;\n}\n\nresolvePackagePath._resetCache = function () {\n  CACHE = new CacheGroup();\n  FIND_UP_CACHE = new Cache();\n};\n// eslint-disable-next-line no-redeclare\nmodule resolvePackagePath {\n  export let _CACHE: CacheGroup;\n  export let _FIND_UP_CACHE = FIND_UP_CACHE;\n  export let findUpPackagePath = _findUpPackagePath;\n}\nObject.defineProperty(resolvePackagePath, '_CACHE', {\n  get: function () {\n    return CACHE;\n  },\n});\nObject.defineProperty(resolvePackagePath, '_FIND_UP_CACHE', {\n  get: function () {\n    return FIND_UP_CACHE;\n  },\n});\n\nresolvePackagePath.getRealFilePath = function (filePath: string) {\n  return getRealFilePath(CACHE.REAL_FILE_PATH, filePath);\n};\n\nresolvePackagePath.getRealDirectoryPath = function (directoryPath: string) {\n  return getRealDirectoryPath(CACHE.REAL_DIRECTORY_PATH, directoryPath);\n};\n"]}