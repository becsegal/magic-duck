export { Source } from './lib/source/source';
export { default as builders } from './lib/v1/public-builders';
import * as ASTv1_1 from './lib/v1/api';
export { ASTv1_1 as ASTv1 };
import * as ASTv2_1 from './lib/v2-a/api';
export { ASTv2_1 as ASTv2 };
export { normalize } from './lib/v2-a/normalize';
export { SymbolTable, BlockSymbolTable, ProgramSymbolTable } from './lib/symbol-table';
export { generateSyntaxError } from './lib/syntax-error';
export { preprocess } from './lib/parser/tokenizer-event-handlers';
export { default as print } from './lib/generation/print';
export { sortByLoc } from './lib/generation/util';
export { default as Walker } from './lib/traversal/walker';
export { default as traverse } from './lib/traversal/traverse';
export { cannotRemoveNode, cannotReplaceNode } from './lib/traversal/errors';
export { default as WalkerPath } from './lib/traversal/path';
export { isKeyword, KEYWORDS_TYPES } from './lib/keywords';
export { getTemplateLocals } from './lib/get-template-locals';
export { SourceSlice } from './lib/source/slice';
export { SourceSpan } from './lib/source/span';
export { SpanList, maybeLoc, loc, hasSpan } from './lib/source/span-list';
export { node } from './lib/v2-a/objects/node';
/** @deprecated use WalkerPath instead */

export { default as Path } from './lib/traversal/walker';
import * as AST_1 from './lib/v1/api';
export { AST_1 as AST };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3N5bnRheC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxTQUFTLE1BQVQsUUFBdUIscUJBQXZCO0FBQ0EsU0FBUyxPQUFPLElBQUksUUFBcEIsUUFBb0MsMEJBQXBDO3lCQUN1QixjO29CQUFYLEs7eUJBQ1csZ0I7b0JBQVgsSztBQUNaLFNBQVMsU0FBVCxRQUEwQixzQkFBMUI7QUFDQSxTQUFTLFdBQVQsRUFBc0IsZ0JBQXRCLEVBQXdDLGtCQUF4QyxRQUFrRSxvQkFBbEU7QUFDQSxTQUFTLG1CQUFULFFBQXdELG9CQUF4RDtBQUNBLFNBQ0UsVUFERixRQVFPLHVDQVJQO0FBU0EsU0FBUyxPQUFPLElBQUksS0FBcEIsUUFBaUMsd0JBQWpDO0FBQ0EsU0FBUyxTQUFULFFBQTBCLHVCQUExQjtBQUNBLFNBQVMsT0FBTyxJQUFJLE1BQXBCLFFBQWtDLHdCQUFsQztBQUNBLFNBQVMsT0FBTyxJQUFJLFFBQXBCLFFBQW9DLDBCQUFwQztBQUVBLFNBQVMsZ0JBQVQsRUFBMkIsaUJBQTNCLFFBQW9ELHdCQUFwRDtBQUNBLFNBQVMsT0FBTyxJQUFJLFVBQXBCLFFBQXNDLHNCQUF0QztBQUNBLFNBQVMsU0FBVCxFQUFpQyxjQUFqQyxRQUF1RCxnQkFBdkQ7QUFDQSxTQUFTLGlCQUFULFFBQWtDLDJCQUFsQztBQUVBLFNBQVMsV0FBVCxRQUE0QixvQkFBNUI7QUFDQSxTQUFTLFVBQVQsUUFBMkIsbUJBQTNCO0FBQ0EsU0FDRSxRQURGLEVBRUUsUUFGRixFQUlFLEdBSkYsRUFNRSxPQU5GLFFBT08sd0JBUFA7QUFVQSxTQUFTLElBQVQsUUFBcUIseUJBQXJCO0FBRUE7O0FBQ0EsU0FBUyxPQUFPLElBQUksSUFBcEIsUUFBZ0Msd0JBQWhDO3VCQUdxQixjO2tCQUFULEciLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBTb3VyY2UgfSBmcm9tICcuL2xpYi9zb3VyY2Uvc291cmNlJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgYnVpbGRlcnMgfSBmcm9tICcuL2xpYi92MS9wdWJsaWMtYnVpbGRlcnMnO1xuZXhwb3J0ICogYXMgQVNUdjEgZnJvbSAnLi9saWIvdjEvYXBpJztcbmV4cG9ydCAqIGFzIEFTVHYyIGZyb20gJy4vbGliL3YyLWEvYXBpJztcbmV4cG9ydCB7IG5vcm1hbGl6ZSB9IGZyb20gJy4vbGliL3YyLWEvbm9ybWFsaXplJztcbmV4cG9ydCB7IFN5bWJvbFRhYmxlLCBCbG9ja1N5bWJvbFRhYmxlLCBQcm9ncmFtU3ltYm9sVGFibGUgfSBmcm9tICcuL2xpYi9zeW1ib2wtdGFibGUnO1xuZXhwb3J0IHsgZ2VuZXJhdGVTeW50YXhFcnJvciwgR2xpbW1lclN5bnRheEVycm9yIH0gZnJvbSAnLi9saWIvc3ludGF4LWVycm9yJztcbmV4cG9ydCB7XG4gIHByZXByb2Nlc3MsXG4gIEFTVFBsdWdpbixcbiAgQVNUUGx1Z2luQnVpbGRlcixcbiAgQVNUUGx1Z2luRW52aXJvbm1lbnQsXG4gIFN5bnRheCxcbiAgVGVtcGxhdGVJZEZuLFxuICBQcmVjb21waWxlT3B0aW9ucyxcbn0gZnJvbSAnLi9saWIvcGFyc2VyL3Rva2VuaXplci1ldmVudC1oYW5kbGVycyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHByaW50IH0gZnJvbSAnLi9saWIvZ2VuZXJhdGlvbi9wcmludCc7XG5leHBvcnQgeyBzb3J0QnlMb2MgfSBmcm9tICcuL2xpYi9nZW5lcmF0aW9uL3V0aWwnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBXYWxrZXIgfSBmcm9tICcuL2xpYi90cmF2ZXJzYWwvd2Fsa2VyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdHJhdmVyc2UgfSBmcm9tICcuL2xpYi90cmF2ZXJzYWwvdHJhdmVyc2UnO1xuZXhwb3J0IHsgTm9kZVZpc2l0b3IgfSBmcm9tICcuL2xpYi90cmF2ZXJzYWwvdmlzaXRvcic7XG5leHBvcnQgeyBjYW5ub3RSZW1vdmVOb2RlLCBjYW5ub3RSZXBsYWNlTm9kZSB9IGZyb20gJy4vbGliL3RyYXZlcnNhbC9lcnJvcnMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBXYWxrZXJQYXRoIH0gZnJvbSAnLi9saWIvdHJhdmVyc2FsL3BhdGgnO1xuZXhwb3J0IHsgaXNLZXl3b3JkLCBLZXl3b3JkVHlwZSwgS0VZV09SRFNfVFlQRVMgfSBmcm9tICcuL2xpYi9rZXl3b3Jkcyc7XG5leHBvcnQgeyBnZXRUZW1wbGF0ZUxvY2FscyB9IGZyb20gJy4vbGliL2dldC10ZW1wbGF0ZS1sb2NhbHMnO1xuXG5leHBvcnQgeyBTb3VyY2VTbGljZSB9IGZyb20gJy4vbGliL3NvdXJjZS9zbGljZSc7XG5leHBvcnQgeyBTb3VyY2VTcGFuIH0gZnJvbSAnLi9saWIvc291cmNlL3NwYW4nO1xuZXhwb3J0IHtcbiAgU3Bhbkxpc3QsXG4gIG1heWJlTG9jLFxuICBNYXliZUhhc1NvdXJjZVNwYW4sXG4gIGxvYyxcbiAgSGFzU291cmNlU3BhbixcbiAgaGFzU3Bhbixcbn0gZnJvbSAnLi9saWIvc291cmNlL3NwYW4tbGlzdCc7XG5leHBvcnQgeyBQcmVwcm9jZXNzT3B0aW9ucyB9IGZyb20gJy4vbGliL3BhcnNlci90b2tlbml6ZXItZXZlbnQtaGFuZGxlcnMnO1xuXG5leHBvcnQgeyBub2RlIH0gZnJvbSAnLi9saWIvdjItYS9vYmplY3RzL25vZGUnO1xuXG4vKiogQGRlcHJlY2F0ZWQgdXNlIFdhbGtlclBhdGggaW5zdGVhZCAqL1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBQYXRoIH0gZnJvbSAnLi9saWIvdHJhdmVyc2FsL3dhbGtlcic7XG5cbi8qKiBAZGVwcmVjYXRlZCB1c2UgQVNUdjEgaW5zdGVhZCAqL1xuZXhwb3J0ICogYXMgQVNUIGZyb20gJy4vbGliL3YxL2FwaSc7XG4iXSwic291cmNlUm9vdCI6IiJ9