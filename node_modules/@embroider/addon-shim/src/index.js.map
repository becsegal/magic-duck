{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { resolve, relative, isAbsolute } from 'path';\nimport { readFileSync } from 'fs';\nimport {\n  AddonMeta,\n  AddonInstance,\n  isDeepAddonInstance,\n  PackageInfo,\n} from '@embroider/shared-internals';\nimport buildFunnel from 'broccoli-funnel';\nimport type { Node } from 'broccoli-node-api';\nimport { satisfies } from 'semver';\n\nexport interface ShimOptions {\n  disabled?: (options: any) => boolean;\n}\n\nfunction addonMeta(pkgJSON: PackageInfo): AddonMeta {\n  let meta = pkgJSON['ember-addon'];\n  if (meta?.version !== 2 || meta?.type !== 'addon') {\n    throw new Error(`did not find valid v2 addon metadata in ${pkgJSON.name}`);\n  }\n  return meta as AddonMeta;\n}\n\nexport function addonV1Shim(directory: string, options: ShimOptions = {}) {\n  let pkg: PackageInfo = JSON.parse(\n    readFileSync(resolve(directory, './package.json'), 'utf8')\n  );\n\n  let meta = addonMeta(pkg);\n  let disabled = false;\n  const rootTrees = new WeakMap<AddonInstance, Node>();\n\n  function rootTree(addonInstance: AddonInstance): Node {\n    let tree = rootTrees.get(addonInstance);\n    if (!tree) {\n      tree = addonInstance.treeGenerator(directory);\n      rootTrees.set(addonInstance, tree);\n    }\n    return tree;\n  }\n\n  let autoImportInstance: EAI2Instance | undefined;\n\n  return {\n    name: pkg.name,\n    included(this: AddonInstance, ...args: unknown[]) {\n      let parentOptions;\n      let parentName: string;\n      if (isDeepAddonInstance(this)) {\n        parentOptions = this.parent.options;\n        parentName = this.parent.name;\n      } else {\n        parentOptions = this.app.options;\n        parentName = this.parent.name();\n      }\n\n      // if we're being used by a v1 package, that package needs ember-auto-import 2\n      if ((this.parent.pkg['ember-addon']?.version ?? 1) < 2) {\n        let autoImport = locateAutoImport(this.parent.addons);\n        if (!autoImport.present) {\n          throw new Error(\n            `${parentName} needs to depend on ember-auto-import in order to use ${this.name}`\n          );\n        }\n\n        if (!autoImport.satisfiesV2) {\n          throw new Error(\n            `${parentName} has ember-auto-import ${autoImport.version} which is not new enough to use ${this.name}. It needs to upgrade to >=2.0`\n          );\n        }\n        autoImportInstance = autoImport.instance;\n        autoImportInstance.registerV2Addon(this.name, directory);\n      } else {\n        // if we're being used by a v2 addon, it also has this shim and will\n        // forward our registration onward to ember-auto-import\n        (this.parent as EAI2Instance).registerV2Addon(this.name, directory);\n      }\n\n      if (options.disabled) {\n        disabled = options.disabled(parentOptions);\n      }\n\n      // this is at the end so we can find our own autoImportInstance before any\n      // deeper v2 addons ask us to forward registrations upward to it\n      this._super.included.apply(this, args);\n    },\n\n    treeForApp(this: AddonInstance) {\n      if (disabled) {\n        return undefined;\n      }\n      let maybeAppJS = meta['app-js'];\n      if (maybeAppJS) {\n        const appJS = maybeAppJS;\n        return buildFunnel(rootTree(this), {\n          files: Object.values(appJS),\n          getDestinationPath(relativePath: string): string {\n            for (let [exteriorName, interiorName] of Object.entries(appJS)) {\n              if (relativePath === interiorName) {\n                return exteriorName;\n              }\n            }\n            throw new Error(\n              `bug in addonV1Shim, no match for ${relativePath} in ${JSON.stringify(\n                appJS\n              )}`\n            );\n          },\n        });\n      }\n    },\n\n    treeForAddon() {\n      // this never goes through broccoli -- it's always pulled into the app via\n      // ember-auto-import, as needed. This means it always benefits from\n      // tree-shaking.\n      return undefined;\n    },\n\n    treeForPublic(this: AddonInstance) {\n      if (disabled) {\n        return undefined;\n      }\n      let maybeAssets = meta['public-assets'];\n      if (maybeAssets) {\n        const assets = maybeAssets;\n        return buildFunnel(rootTree(this), {\n          files: Object.keys(assets),\n          getDestinationPath(relativePath: string): string {\n            for (let [interiorName, exteriorName] of Object.entries(assets)) {\n              if (relativePath === interiorName) {\n                return exteriorName;\n              }\n            }\n            throw new Error(\n              `bug in addonV1Shim, no match for ${relativePath} in ${JSON.stringify(\n                assets\n              )}`\n            );\n          },\n        });\n      }\n    },\n\n    cacheKeyForTree(this: AddonInstance, treeType: string): string {\n      return `embroider-addon-shim/${treeType}/${directory}`;\n    },\n\n    isDevelopingAddon(this: AddonInstance) {\n      // if the app is inside our own directory, we must be under development.\n      // This setting controls whether ember-cli will watch for changes in the\n      // broccoli trees we expose, but it doesn't have any control over our\n      // files that get auto-imported into the app. For that, you should use\n      // ember-auto-import's watchDependencies option (and this should become\n      // part of the blueprint for test apps).\n      let appInstance = this._findHost();\n      return isInside(directory, appInstance.project.root);\n    },\n\n    registerV2Addon(name: string, root: string): void {\n      autoImportInstance!.registerV2Addon(name, root);\n    },\n  };\n}\n\nfunction isInside(parentDir: string, otherDir: string): boolean {\n  let rel = relative(parentDir, otherDir);\n  return Boolean(rel) && !rel.startsWith('..') && !isAbsolute(rel);\n}\n\ntype EAI2Instance = AddonInstance & {\n  registerV2Addon(name: string, root: string): void;\n};\n\nfunction locateAutoImport(addons: AddonInstance[]):\n  | { present: false }\n  | {\n      present: true;\n      version: string;\n      satisfiesV2: false;\n    }\n  | {\n      present: true;\n      version: string;\n      satisfiesV2: true;\n      instance: EAI2Instance;\n    } {\n  let instance = addons.find((a) => a.name === 'ember-auto-import');\n  if (!instance) {\n    return { present: false };\n  }\n  let version = instance.pkg.version;\n  let satisfiesV2 = satisfies(version, '>=2.0.0-alpha.0', {\n    includePrerelease: true,\n  });\n  if (satisfiesV2) {\n    return {\n      present: true,\n      version,\n      satisfiesV2,\n      instance: instance as EAI2Instance,\n    };\n  } else {\n    return {\n      present: true,\n      version,\n      satisfiesV2,\n    };\n  }\n}\n"]}