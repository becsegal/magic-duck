{"version":3,"file":"babel-filter.js","sourceRoot":"","sources":["babel-filter.ts"],"names":[],"mappings":";;;;;AAAA,oEAA2C;AAC3C,oDAA4B;AAE5B,SAAwB,WAAW,CAAC,SAAsD,EAAE,OAAe;IACzG,OAAO,SAAS,mBAAmB,CAAC,QAAgB;QAClD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;YAC7B,mCAAmC;YACnC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,KAAK,GAAG,uBAAY,CAAC,MAAM,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACnF,IAAI,KAAK,EAAE;YACT,KAAK,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,IAAI,SAAS,EAAE;gBACnD,IAAI,KAAK,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,IAAI,gBAAM,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,EAAE;oBAC/F,IAAI,KAAK,CAAC,cAAc,EAAE,EAAE;wBAC1B,MAAM,IAAI,KAAK,CACb,oHAAoH,CACrH,CAAC;qBACH;oBACD,OAAO,KAAK,CAAC;iBACd;aACF;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAtBD,8BAsBC;AAED,SAAS,cAAc,CAAC,QAAgB;IACtC,4EAA4E;IAC5E,0EAA0E;IAC1E,2EAA2E;IAC3E,wDAAwD;IACxD,OAAO,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpC,CAAC","sourcesContent":["import PackageCache from './package-cache';\nimport semver from 'semver';\n\nexport default function babelFilter(skipBabel: { package: string; semverRange?: string }[], appRoot: string) {\n  return function shouldTranspileFile(filename: string) {\n    if (!babelCanHandle(filename)) {\n      // quick exit for non JS extensions\n      return false;\n    }\n\n    let owner = PackageCache.shared('embroider-stage3', appRoot).ownerOfFile(filename);\n    if (owner) {\n      for (let { package: pkg, semverRange } of skipBabel) {\n        if (owner.name === pkg && (semverRange == null || semver.satisfies(owner.version, semverRange))) {\n          if (owner.isEmberPackage()) {\n            throw new Error(\n              `You can't use skipBabel to disable transpilation of Ember addons, it only works for non-Ember third-party packages`\n            );\n          }\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction babelCanHandle(filename: string) {\n  // we can handle .js and .ts files with babel. If typescript is enabled, .ts\n  // files become resolvable and stage3 will be asking us if they should get\n  // transpiled and the answer is yes. If typescript is not enbled, they will\n  // not be resolvable, so stage3 won't ask us about them.\n  return /\\.[jt]s$/i.test(filename);\n}\n"]}