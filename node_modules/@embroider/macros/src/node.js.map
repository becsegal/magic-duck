{"version":3,"file":"node.js","sourceRoot":"","sources":["node.ts"],"names":[],"mappings":";AAAA,2EAA2E;AAC3E,iDAAiD;;;;;;AAEjD,wDAAwD;AACxD,iDAA0D;AAAjD,8HAAA,OAAO,OAAgB;AAKhC,SAAgB,uBAAuB,CAAC,IAAgB;IACtD,OAAO,CACL,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,CAAC;QACf,IAAI,CAAC,CAAC,CAAC;QACP,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ;QAC1B,IAAI,CAAC,CAAC,CAAS,CAAC,2BAA2B,CAAC;QAC/C,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,UAAU,IAAK,IAAY,CAAC,wBAAwB,CAAC,CAC/E,CAAC;AACJ,CAAC;AATD,0DASC","sourcesContent":["// this is the public entrypoint for Node-side code, as opposed to index.ts\n// which is our browser-visible public entrypoint\n\n// Entrypoint for managing the macro config within Node.\nexport { default as MacrosConfig } from './macros-config';\nexport type { Merger } from './macros-config';\n\n// Utility for detecting our babel and AST plugins.\nimport type { PluginItem } from '@babel/core';\nexport function isEmbroiderMacrosPlugin(item: PluginItem) {\n  return (\n    (Array.isArray(item) &&\n      item.length > 1 &&\n      item[1] &&\n      typeof item[1] === 'object' &&\n      (item[1] as any).embroiderMacrosConfigMarker) ||\n    (item && typeof item === 'function' && (item as any).embroiderMacrosASTMarker)\n  );\n}\n"]}