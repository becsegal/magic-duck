{"version":3,"file":"macro-maybe-attrs.js","sourceRoot":"","sources":["macro-maybe-attrs.ts"],"names":[],"mappings":";;;;;;AAAA,0DAAkC;AAElC,SAAgB,UAAU,CAAC,WAAgB,EAAE,IAAS,EAAE,QAAa;IACnE,IAAI,CAAC,SAAS,EAAE,GAAG,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;IAE5C,IAAI,CAAC,SAAS,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;KACnE;IAED,IAAI,MAAM,GAAG,IAAA,kBAAQ,EAAC,SAAS,CAAC,CAAC;IACjC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;QACrB,MAAM,IAAI,KAAK,CAAC,iEAAiE,CAAC,CAAC;KACpF;IAED,KAAK,IAAI,QAAQ,IAAI,SAAS,EAAE;QAC9B,IAAI,QAAQ,CAAC,IAAI,KAAK,gBAAgB,EAAE;YACtC,MAAM,IAAI,KAAK,CAAC,2BAA2B,QAAQ,CAAC,IAAI,qCAAqC,CAAC,CAAC;SAChG;KACF;IAED,IAAI,MAAM,CAAC,KAAK,EAAE;QAChB,KAAK,IAAI,QAAQ,IAAI,SAAS,EAAE;YAC9B,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;SAChG;QAED,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YAChC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAC/F;KACF;AACH,CAAC;AA3BD,gCA2BC","sourcesContent":["import evaluate from './evaluate';\n\nexport function maybeAttrs(elementNode: any, node: any, builders: any) {\n  let [predicate, ...bareAttrs] = node.params;\n\n  if (!predicate) {\n    throw new Error(`macroMaybeAttrs requires at least one argument`);\n  }\n\n  let result = evaluate(predicate);\n  if (!result.confident) {\n    throw new Error(`first argument to macroMaybeAttrs must be statically analyzable`);\n  }\n\n  for (let bareAttr of bareAttrs) {\n    if (bareAttr.type !== 'PathExpression') {\n      throw new Error(`macroMaybeAttrs found a ${bareAttr.type} where it expected a PathExpression`);\n    }\n  }\n\n  if (result.value) {\n    for (let bareAttr of bareAttrs) {\n      elementNode.attributes.push(builders.attr(bareAttr.original, builders.text(''), bareAttr.loc));\n    }\n\n    for (let attr of node.hash.pairs) {\n      elementNode.attributes.push(builders.attr(attr.key, builders.mustache(attr.value), attr.loc));\n    }\n  }\n}\n"]}