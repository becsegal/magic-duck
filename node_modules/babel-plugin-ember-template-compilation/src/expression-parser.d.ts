import type { NodePath } from '@babel/traverse';
import type * as Babel from '@babel/core';
import type { types as t } from '@babel/core';
export declare class ExpressionParser {
    private babel;
    constructor(babel: typeof Babel);
    parseExpression(invokedName: string, path: NodePath<t.Expression>): unknown;
    parseArrayExpression(invokedName: string, path: NodePath<t.ArrayExpression>): unknown[];
    parseScope(invokedName: string, path: NodePath<t.ObjectProperty | t.ObjectMethod>): string[];
    parseObjectExpression(invokedName: string, path: NodePath<t.ObjectExpression>, shouldParseScope?: boolean): Record<string, unknown>;
    private get t();
}
