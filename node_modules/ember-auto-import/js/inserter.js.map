{"version":3,"file":"inserter.js","sourceRoot":"","sources":["../ts/inserter.ts"],"names":[],"mappings":"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","sourcesContent":["import type { InputNode } from 'broccoli-node-api';\nimport Plugin from 'broccoli-plugin';\nimport makeDebug from 'debug';\nimport { existsSync, readFileSync } from 'fs';\nimport { outputFileSync, readJSONSync } from 'fs-extra';\nimport { join } from 'path';\nimport parse5 from 'parse5';\nimport BundleConfig from './bundle-config';\nimport { Bundler } from './bundler';\n\nconst debug = makeDebug('ember-auto-import:inserter');\n\nexport interface InserterOptions {\n  publicAssetURL: string;\n  insertScriptsAt: string | undefined;\n  insertStylesAt: string | undefined;\n}\n\ninterface ScriptTarget {\n  scriptChunks: string[];\n  bundleName: string;\n  // ember-auto-import's own bundles (app and tests) can get automatically\n  // inserted after particular files in the HTML (vendor.js and\n  // test-support.js). Other custom bundles won't have this.\n  afterFile: string | undefined;\n  inserted: boolean;\n}\n\ninterface StyleTarget {\n  styleChunks: string[];\n  bundleName: string;\n  // ember-auto-import's own bundles (app and tests) can get automatically\n  // inserted after particular files in the HTML (vendor.css and\n  // test-support.css). Other custom bundles won't have this.\n  afterFile: string | undefined;\n  inserted: boolean;\n}\n\ninterface Targets {\n  scripts: ScriptTarget[];\n  styles: StyleTarget[];\n}\n\nexport class Inserter extends Plugin {\n  private outputCache = new Map<string, string>();\n\n  constructor(\n    allApp: InputNode,\n    private bundler: Bundler,\n    private config: BundleConfig,\n    private options: InserterOptions\n  ) {\n    super([allApp], {\n      annotation: 'ember-auto-import-inserter',\n      persistentOutput: true,\n    });\n  }\n  async build() {\n    let fastbootInfo = this.fastbootManifestInfo();\n    let chunks = this.categorizeChunks();\n    for (let filename of this.config.htmlEntrypoints()) {\n      let fullName = join(this.inputPaths[0], filename);\n      if (existsSync(fullName)) {\n        this.processHTML(filename, fullName, fastbootInfo, chunks);\n      }\n    }\n\n    if (fastbootInfo && !fastbootInfo.readsHTML) {\n      // we need to add our chunks to the fastboot manifest, because this\n      // version of fastboot doesn't look for scripts in HTML.\n      let assets = this.bundler.buildResult.entrypoints.get('app');\n      if (assets) {\n        for (let asset of assets) {\n          if (asset.endsWith('.js')) {\n            fastbootInfo.vendorFiles.push(asset);\n          }\n        }\n      }\n      for (let asset of this.bundler.buildResult.lazyAssets) {\n        if (asset.endsWith('.js')) {\n          fastbootInfo.vendorFiles.push(asset);\n        }\n      }\n\n      this.cachedOutputFileSync(\n        'package.json',\n        JSON.stringify(fastbootInfo.pkg, null, 2)\n      );\n    }\n  }\n\n  // not touching our output files helps prevent other parts of the build from\n  // reacting to spurious changes. For example, if we touch the HTML, we defeat\n  // CSS hot reloading by making ember-cli think the HTML file has changed.\n  private cachedOutputFileSync(localFilename: string, content: string) {\n    if (this.outputCache.get(localFilename) !== content) {\n      this.outputCache.set(localFilename, content);\n      outputFileSync(join(this.outputPath, localFilename), content, 'utf8');\n    }\n  }\n\n  private processHTML(\n    filename: string,\n    fullName: string,\n    fastbootInfo: ReturnType<typeof Inserter.prototype.fastbootManifestInfo>,\n    targets: Targets\n  ) {\n    debug(`parsing %s`, filename);\n    let html = readFileSync(fullName, 'utf8');\n    let ast = parse5.parse(html, { sourceCodeLocationInfo: true });\n    let stringInserter = new StringInserter(html);\n\n    if (this.options.insertScriptsAt) {\n      debug(\n        `looking for custom script element: %s`,\n        this.options.insertScriptsAt\n      );\n    } else {\n      debug(\n        `looking for scripts with src: %s`,\n        targets.scripts.map((s) => s.afterFile).filter(Boolean)\n      );\n    }\n\n    if (this.options.insertStylesAt) {\n      debug(\n        `looking for custom style element: %s`,\n        this.options.insertStylesAt\n      );\n    } else {\n      debug(\n        `looking for link with href: %s`,\n        targets.styles.map((s) => s.afterFile).filter(Boolean)\n      );\n    }\n\n    traverse(ast, (element) => {\n      if (this.options.insertScriptsAt) {\n        if (element.tagName === this.options.insertScriptsAt) {\n          let entrypoint = element.attrs.find((a) => a.name === 'entrypoint');\n          if (!entrypoint) {\n            throw new Error(\n              `<${element.tagName}/> element in ${filename} is missing required entrypoint attribute`\n            );\n          }\n          this.replaceCustomScript(\n            targets,\n            fastbootInfo,\n            stringInserter,\n            element,\n            entrypoint.value\n          );\n        }\n      } else if (element.tagName === 'script') {\n        let src = element.attrs.find((a) => a.name === 'src')?.value;\n        if (src) {\n          debug(`found script with src=%s`, src);\n          this.insertScripts(\n            targets,\n            fastbootInfo,\n            stringInserter,\n            element,\n            src\n          );\n        }\n      }\n\n      if (this.options.insertStylesAt) {\n        if (element.tagName === this.options.insertStylesAt) {\n          let entrypoint = element.attrs.find((a) => a.name === 'entrypoint');\n          if (!entrypoint) {\n            throw new Error(\n              `<${element.tagName}/> element in ${filename} is missing required entrypoint attribute`\n            );\n          }\n          this.replaceCustomStyle(\n            targets,\n            stringInserter,\n            element,\n            entrypoint.value\n          );\n        }\n      } else if (element.tagName === 'link') {\n        if (\n          element.attrs.some(\n            (a) => a.name === 'rel' && a.value === 'stylesheet'\n          )\n        ) {\n          let href = element.attrs.find((a) => a.name === 'href')?.value;\n          if (href) {\n            debug(`found stylesheet with href=%s`, href);\n            this.insertStyles(targets, stringInserter, element, href);\n          }\n        }\n      }\n    });\n\n    let appScripts = [...targets.scripts].find(\n      (entry) => entry.bundleName === 'app'\n    );\n    if (appScripts && !appScripts.inserted) {\n      if (this.options.insertScriptsAt) {\n        throw new Error(\n          `ember-auto-import cannot find <${this.options.insertScriptsAt} entrypoint=\"${appScripts.bundleName}\"> in ${filename}.`\n        );\n      } else {\n        throw new Error(\n          `ember-auto-import could not find a place to insert app scripts in ${filename}.`\n        );\n      }\n    }\n\n    let appStyles = [...targets.styles.values()].find(\n      (entry) => entry.bundleName === 'app'\n    );\n    if (appStyles && !appStyles.inserted) {\n      if (this.options.insertStylesAt) {\n        throw new Error(\n          `ember-auto-import cannot find <${this.options.insertStylesAt} entrypoint=\"${appStyles.bundleName}\"> in ${filename}.`\n        );\n      } else {\n        throw new Error(\n          `ember-auto-import could not find a place to insert app styles in ${filename}.`\n        );\n      }\n    }\n\n    this.cachedOutputFileSync(filename, stringInserter.serialize());\n  }\n\n  private insertScripts(\n    targets: Targets,\n    fastbootInfo: ReturnType<typeof Inserter.prototype.fastbootManifestInfo>,\n    stringInserter: StringInserter,\n    element: parse5.Element,\n    src: string\n  ) {\n    for (let entry of targets.scripts) {\n      if (entry.afterFile && src.endsWith(entry.afterFile)) {\n        let { scriptChunks, bundleName } = entry;\n        entry.inserted = true;\n        debug(`inserting %s`, scriptChunks);\n        let insertedSrc = scriptChunks\n          .map((chunk) => `\\n<script src=\"${this.chunkURL(chunk)}\"></script>`)\n          .join('');\n        if (fastbootInfo?.readsHTML && bundleName === 'app') {\n          // lazy chunks are eager in fastboot because webpack's lazy\n          // loading doesn't work in fastboot, because we share a single\n          // build with the browser and use a browser-specific\n          // lazy-loading implementation. It's probably better to make\n          // them eager on the server anyway, so they're handled as part\n          // of server startup.\n          insertedSrc += this.bundler.buildResult.lazyAssets\n            .map(\n              (chunk) =>\n                `\\n<fastboot-script src=\"${this.chunkURL(\n                  chunk\n                )}\"></fastboot-script>`\n            )\n            .join('');\n        }\n        stringInserter.insert(\n          element.sourceCodeLocation!.endOffset,\n          insertedSrc\n        );\n      }\n    }\n  }\n\n  private replaceCustomScript(\n    targets: Targets,\n    fastbootInfo: ReturnType<typeof Inserter.prototype.fastbootManifestInfo>,\n    stringInserter: StringInserter,\n    element: parse5.Element,\n    bundleName: string\n  ) {\n    let loc = element.sourceCodeLocation!;\n    stringInserter.remove(loc.startOffset, loc.endOffset - loc.startOffset);\n    for (let entry of targets.scripts) {\n      if (bundleName !== entry.bundleName) {\n        continue;\n      }\n      let { scriptChunks } = entry;\n      entry.inserted = true;\n      debug(`inserting %s`, scriptChunks);\n      let tags = scriptChunks.map((chunk) =>\n        this.scriptFromCustomElement(element, chunk)\n      );\n      if (fastbootInfo?.readsHTML && bundleName === 'app') {\n        // lazy chunks are eager in fastboot because webpack's lazy\n        // loading doesn't work in fastboot, because we share a single\n        // build with the browser and use a browser-specific\n        // lazy-loading implementation. It's probably better to make\n        // them eager on the server anyway, so they're handled as part\n        // of server startup.\n        tags = tags.concat(\n          this.bundler.buildResult.lazyAssets.map((chunk) =>\n            this.scriptFromCustomElement(element, chunk, 'fastboot-script')\n          )\n        );\n      }\n      stringInserter.insert(loc.endOffset, tags.join('\\n'));\n    }\n  }\n\n  private replaceCustomStyle(\n    targets: Targets,\n    stringInserter: StringInserter,\n    element: parse5.Element,\n    bundleName: string\n  ) {\n    let loc = element.sourceCodeLocation!;\n    stringInserter.remove(loc.startOffset, loc.endOffset - loc.startOffset);\n    for (let entry of targets.styles) {\n      if (bundleName !== entry.bundleName) {\n        continue;\n      }\n      let { styleChunks } = entry;\n      entry.inserted = true;\n      debug(`inserting %s`, styleChunks);\n      let tags = styleChunks.map((chunk) =>\n        this.styleFromCustomElement(element, chunk)\n      );\n      stringInserter.insert(loc.endOffset, tags.join('\\n'));\n    }\n  }\n\n  private scriptFromCustomElement(\n    element: parse5.Element,\n    chunk: string,\n    tag = 'script'\n  ) {\n    let output = `<${tag} src=\"${this.chunkURL(chunk)}\"`;\n    for (let { name, value } of element.attrs) {\n      if (name !== 'entrypoint') {\n        output += ` ${name}`;\n        if (value) {\n          output += `=\"${value}\"`;\n        }\n      }\n    }\n    output += `></${tag}>`;\n    return output;\n  }\n\n  private styleFromCustomElement(element: parse5.Element, chunk: string) {\n    let output = `<link rel=\"stylesheet\" href=\"${this.chunkURL(chunk)}\"`;\n    for (let { name, value } of element.attrs) {\n      if (name !== 'entrypoint') {\n        output += ` ${name}`;\n        if (value) {\n          output += `=\"${value}\"`;\n        }\n      }\n    }\n    output += `/>`;\n    return output;\n  }\n\n  private insertStyles(\n    targets: Targets,\n    stringInserter: StringInserter,\n    element: parse5.Element,\n    href: string\n  ) {\n    for (let entry of targets.styles) {\n      if (entry.afterFile && href.endsWith(entry.afterFile)) {\n        let { styleChunks } = entry;\n        entry.inserted = true;\n        debug(`inserting %s`, styleChunks);\n        stringInserter.insert(\n          element.sourceCodeLocation!.endOffset,\n          styleChunks\n            .map(\n              (chunk) =>\n                `\\n<link rel=\"stylesheet\" href=\"${this.chunkURL(chunk)}\"/>`\n            )\n            .join('')\n        );\n      }\n    }\n  }\n\n  private chunkURL(chunk: string) {\n    return chunk.replace(/^assets\\//, this.options.publicAssetURL);\n  }\n\n  private fastbootManifestInfo():\n    | { readsHTML: true }\n    | { readsHTML: false; pkg: any; vendorFiles: string[] }\n    | undefined {\n    let pkgPath = join(this.inputPaths[0], 'package.json');\n    if (!existsSync(pkgPath)) {\n      return undefined;\n    }\n    let pkg = readJSONSync(pkgPath);\n    if (!pkg.fastboot) {\n      return undefined;\n    }\n    if ((pkg.fastboot.schemaVersion ?? 0) >= 5) {\n      // starting in schemaVersion 5, fastboot discovers scripts directly from\n      // the HTML, so we don't need to muck about with inserting things into a\n      // separate manifest\n      return { readsHTML: true };\n    } else {\n      if (!pkg.fastboot.manifest?.vendorFiles) {\n        throw new Error(\n          `bug: ember-auto-import can't find the fastboot manifest vendorFiles`\n        );\n      }\n      return {\n        pkg,\n        readsHTML: false,\n        vendorFiles: pkg.fastboot.manifest.vendorFiles,\n      };\n    }\n  }\n\n  private categorizeChunks(): Targets {\n    let scripts: ScriptTarget[] = [];\n    let styles: StyleTarget[] = [];\n    for (let [bundleName, assets] of this.bundler.buildResult.entrypoints) {\n      let scriptChunks = assets.filter((a) => a.endsWith('.js'));\n      if (scriptChunks.length > 0) {\n        let afterFile: string | undefined;\n        if (this.config.isBuiltInBundleName(bundleName)) {\n          afterFile = this.config.bundleEntrypoint(bundleName, 'js');\n        }\n        scripts.push({\n          scriptChunks,\n          bundleName,\n          afterFile,\n          inserted: false,\n        });\n      }\n      let styleChunks = assets.filter((a) => a.endsWith('.css'));\n      if (styleChunks.length > 0) {\n        let afterFile: string | undefined;\n        if (this.config.isBuiltInBundleName(bundleName)) {\n          afterFile = this.config.bundleEntrypoint(bundleName, 'css');\n        }\n        styles.push({\n          styleChunks,\n          bundleName,\n          afterFile,\n          inserted: false,\n        });\n      }\n    }\n    return { scripts, styles };\n  }\n}\n\nclass StringInserter {\n  private mutations: (\n    | {\n        type: 'insert';\n        location: number;\n        str: string;\n      }\n    | {\n        type: 'remove';\n        location: number;\n        length: number;\n      }\n  )[] = [];\n  constructor(private original: string) {}\n  insert(location: number, str: string) {\n    this.mutations.push({ type: 'insert', location, str });\n  }\n  remove(location: number, length: number) {\n    this.mutations.push({ type: 'remove', location, length });\n  }\n  serialize(): string {\n    let output: string[] = [];\n    let mutations = this.mutations\n      .slice()\n      .sort((a, b) => a.location - b.location);\n    let cursor = 0;\n    while (mutations.length > 0) {\n      let nextMutation = mutations.shift()!;\n      output.push(this.original.slice(cursor, nextMutation.location));\n      if (nextMutation.type === 'insert') {\n        output.push(nextMutation.str);\n        cursor = nextMutation.location;\n      } else {\n        cursor = nextMutation.location + nextMutation.length;\n      }\n    }\n    output.push(this.original.slice(cursor));\n    return output.join('');\n  }\n}\n\nfunction traverse(node: parse5.ParentNode, fn: (elt: parse5.Element) => void) {\n  if ('tagName' in node) {\n    fn(node);\n  }\n\n  for (let child of node.childNodes) {\n    if ('childNodes' in child) {\n      traverse(child, fn);\n    }\n  }\n}\n"]}